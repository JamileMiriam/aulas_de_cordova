/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


function onDeviceReady() {
    console.log(navigator.camera);
}

var app = {
    // Application Constructor
    initialize: function() {
	console.log("###initialize: function() {...");
        document.addEventListener('deviceready', this.onDeviceReady.bind(this), false);	
    },


    // deviceready Event Handler
    //
    // Bind any cordova events here. Common events are:
    // 'pause', 'resume', etc.
    onDeviceReady: function() {
        this.receivedEvent('###deviceready');

	//seta funcao this.onClickBtnShowCamera como listener do evento click do bthShowCamera
	document.getElementById("btnShowCamera").addEventListener(
	    "click", this.onClickBtnShowCamera.bind(this), false);


	// --- seta listeners para bateria
	window.addEventListener("batterycritical", this.onBatteryCritical.bind(this), false);
	window.addEventListener("batterylow", this.onBatteryLow.bind(this), false);
	//dispara a cada 1 por cento de mudanca no nivel da baterial
	window.addEventListener("batterystatus", this.onBatteryStatus, false);


	//FILESYSYEM
	window.requestFileSystem(
	    LocalFileSystem.PERSISTENT, 0, this.onFileSystemSuccess, this.onFileSystemFail);
        window.resolveLocalFileSystemURI("file:///example.txt", this.onResolveSuccess, );	
    },

    //CAMERA
    onClickBtnShowCamera : function(){
	navigator.camera.getPicture(this.CameraGetPictureSuccess, this.CameraGetPictureFail, {
	    quality: 50,
            destinationType: Camera.DestinationType.FILE_URI
	});
    },
    CameraGetPictureSuccess:function(imageURI) {
        var image = document.getElementById('imagem');
        image.style.display = 'block';
        image.src = imageURI;
    },
    CameraGetPictureFail:function(message) {
        alert('Failed because: ' + message);
    },

    
    //BATTERY    
    onBatteryStatus: function(status) {
	console.log("###onBatteryStatus : Status da bateria " + status.level + "%");
    },
    onBatteryCritical : function(status){
	alert("###onBatteryCritical : Nivel Critivo da Bateria " + status.level + "%");
    },
    onBatteryLow : function(status){
	alert("###onBatteryLow : function(status){...-> Nivel Baterial Baixo " + status.level + "%");
    },
    onFileSystemSuccess : function(fileSystem){
	console.log("###onFileSystemSuccess : function(fileSystem){...");
    },
    onFileSystemFail : function(fileSystem){
	console.log("###onFileSystemFail : function(fileSystem){...");
    },
    onResolveSuccess : function(fileEntry) {
	console.log("###onResolveSuccess : function(fileEntry) {...");
        console.log(fileEntry.name);
    },
    onResolveFail : function(fileEntry){
	console.log("###onResolveFail : function(fileEntry){...");
    },
    
    // Update DOM on a Received Event
    receivedEvent: function(id) {
        var parentElement = document.getElementById(id);
        var listeningElement = parentElement.querySelector('.listening');
        var receivedElement = parentElement.querySelector('.received');

        listeningElement.setAttribute('style', 'display:none;');
        receivedElement.setAttribute('style', 'display:block;');

        console.log('Received Event: ' + id);
    }
};

app.initialize();
